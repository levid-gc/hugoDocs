<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hosting &amp; Deployment on Hugo</title>
    <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/</link>
    <description>Recent content in Hosting &amp; Deployment on Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Nov 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="levid-gc.github.io/hugoDocs/hosting-and-deployment/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Host-Agnostic Deploys with Nanobox</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/deployment-with-nanobox/</link>
      <pubDate>Thu, 24 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/deployment-with-nanobox/</guid>
      <description>Nanobox provides an entire end-to-end workflow for developing and deploying applications. Using Nanobox to deploy also means you&amp;rsquo;ll use it to develop your application.
If you&amp;rsquo;re already using Nanobox and just need deployment instructions, you can skip to Deploying Hugo with Nanobox
What You&amp;rsquo;ll Need With Nanobox you don&amp;rsquo;t need to worry about having Go or Hugo installed. They&amp;rsquo;ll be installed as part of the development environment created for you.</description>
    </item>
    
    <item>
      <title>Host on Netlify</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-netlify/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-netlify/</guid>
      <description>Netlify provides continuous deployment services, global CDN, ultra-fast DNS, atomic deploys, instant cache invalidation, one-click SSL, a browser-based interface, a CLI, and many other features for managing your Hugo website.
Assumptions  You have an account with GitHub, GitLab, or Bitbucket. You have completed the Quick Start or have Hugo website you are ready to deploy and share with the world. You do not already have a Netlify account.  Create a Netlify account Go to app.</description>
    </item>
    
    <item>
      <title>Host on Firebase</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-firebase/</link>
      <pubDate>Sun, 12 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-firebase/</guid>
      <description>Assumptions  You have an account with Firebase. (If you don&amp;rsquo;t, you can sign up for free using your Google account.) You have completed the Quick Start or have a completed Hugo website ready for deployment.  Initial setup Go to the Firebase console and create a new project (unless you already have a project). You will need to globally install firebase-tools (node.js):
npm install -g firebase-tools  Log in to Firebase (setup on your local machine) using firebase login, which opens a browser where you can select your account.</description>
    </item>
    
    <item>
      <title>Host on GitHub</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-github/</link>
      <pubDate>Fri, 21 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-github/</guid>
      <description>GitHub provides free and fast static hosting over SSL for personal, organization, or project pages directly from a GitHub repository via its GitHub Pages service.
Assumptions  You have Git 2.8 or greater installed on your machine. You have a GitHub account. Signing up for GitHub is free. You have a ready-to-publish Hugo website or have at least completed the Quick Start.  Types of GitHub Pages There are 2 types of GitHub Pages:</description>
    </item>
    
    <item>
      <title>Host on GitLab</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-gitlab/</link>
      <pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-gitlab/</guid>
      <description>GitLab makes it incredibly easy to build, deploy, and host your Hugo website via their free GitLab Pages service, which provides native support for Hugo, as well as numerous other static site generators.
Assumptions  Working familiarity with Git for version control Completion of the Hugo Quick Start A GitLab account A Hugo website on your local machine that you are ready to publish  Create .gitlab-ci.yml cd your-hugo-site  In the root directory of your Hugo site, create a .</description>
    </item>
    
    <item>
      <title>Host on Bitbucket</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-bitbucket/</link>
      <pubDate>Sat, 04 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-bitbucket/</guid>
      <description>You can use Bitbucket and Aerobatic to build, deploy, and host a Hugo website. Aerobatic is a static hosting service that integrates with Bitbucket and provides a free hosting tier.
Assumptions  Working familiarity with Git for version control A Bitbucket account  Install Aerobatic CLI If you haven&amp;rsquo;t previously used Aerobatic, you&amp;rsquo;ll first need to install the Command Line Interface (CLI) and create an account. For a list of all commands available, see the Aerobatic CLI docs.</description>
    </item>
    
    <item>
      <title>Deployment with Wercker</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/deployment-with-wercker/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/deployment-with-wercker/</guid>
      <description>Goals By the end of this guide, you will have completed the following:
 Creating a basic Hugo project and website Version controlling your project with Git Adding your project to GitHub Automating site deployments with a free tool called Wercker Deploying your website to GitHub Pages for free hosting  Assumptions  You have a working familiarity with using Git for version control You have a GitHub account You have already created a basic Hugo project  If you do not meet these assumptions, the GitHub help section has an explanation of how to install and use git.</description>
    </item>
    
    <item>
      <title>Deployment with Rsync</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/deployment-with-rsync/</link>
      <pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/deployment-with-rsync/</guid>
      <description>Assumptions  Access to your web host with SSH A functional static website built with Hugo  The spoiler is that you can deploy your entire website with a command that looks like the following:
hugo &amp;amp;&amp;amp; rsync -avz --delete public/ www-data@ftp.topologix.fr:~/www/  As you will see, we put it in a shell script file, which makes building and deployment as easy as executing ./deploy.
Install SSH Key If it is not done yet, we will make an automated way to SSH to your server.</description>
    </item>
    
    <item>
      <title>Hosting on KeyCDN</title>
      <link>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-keycdn/</link>
      <pubDate>Tue, 12 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>levid-gc.github.io/hugoDocs/hosting-and-deployment/hosting-on-keycdn/</guid>
      <description>KeyCDN provides a multitude of features to help accelerate and secure your Hugo site globally including Brotli compression, Let&amp;rsquo;s Encrypt support, Origin Shield, and more.
Assumptions  You already have a Hugo page configured You have a GitLab account You have a KeyCDN account  Create a KeyCDN Pull Zone The first step will be to login to your KeyCDN account and create a new zone. Name this whatever you like and select the Pull Zone option.</description>
    </item>
    
  </channel>
</rss>
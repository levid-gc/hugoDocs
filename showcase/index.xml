<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Showcase on Hugo</title>
    <link>https://levid-gc.github.io/hugoDocs/showcase/</link>
    <description>Recent content in Showcase on Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://levid-gc.github.io/hugoDocs/showcase/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tomango</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/tomango/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/tomango/</guid>
      <description>Hugo is our static site generator (SSG) of choice. It&amp;rsquo;s really quick. After using it on a number of client projects, it became clear that our new site had to be built with Hugo.
The big benefit of an SSG is how it moves all the heavy lifting to the build time.
For example in WordPress, all the category pages are created at runtime, generating a lot of database queries. In Hugo, the paginated category pages are created at build time - so all the computational complexity is done once, and doesn&amp;rsquo;t impact the user at all.</description>
    </item>
    
    <item>
      <title>Flesland Flis AS</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/flesland-flis/</link>
      <pubDate>Tue, 24 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/flesland-flis/</guid>
      <description>For Flesland Flis I use a combination of Hugo, Forestry.io and Netlify. Static Site Generators and Hugo has been on my radar for a long time, and with all the nice features released in Hugo the last years, it&amp;rsquo;s now my preferred solution for new clients. Also a huge thanks to the guys at Forestry.io, for making such a smooth CMS for Hugo.
The #1 reason why I love Hugo is the logic between content and layout, and of course the speed.</description>
    </item>
    
    <item>
      <title>Forestry.io</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/forestry/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/forestry/</guid>
      <description>It was clear from the get-go that we had to go with a static site generator. Static sites are secure, performant, and give you 100% flexibility. At Forestry.io we provide Content Management Solutions for websites built with static site generators, so we might be a little biased. The only question: Which static site generator was the right choice for us?
Why Hugo? In our early research we looked at Ionic’s site to get some inspiration.</description>
    </item>
    
    <item>
      <title>1Password Support</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/1password-support/</link>
      <pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/1password-support/</guid>
      <description>At 1Password, we used to go through a different documentation platform every month: blog engines, ebooks, wikis, site generators written in Ruby and JavaScript. Each was inadequate in its own special way. Then we found Hugo. We made one last switch, and we&amp;rsquo;re glad we did.
Not all static site generators are created equal Finding a tool that will make your customers, writers, designers, and DevOps team happy is no easy task, but we managed it with Hugo:</description>
    </item>
    
    <item>
      <title>StackImpact</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/stackimpact/</link>
      <pubDate>Tue, 20 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/stackimpact/</guid>
      <description>After gradually handing over the control of our website to WordPress plugins, we realized that we needed to act.
Static web sites have natural advantages such as security, performance and content versioning (e.g. with Git). Static site generators such as Hugo made static websites cool again. Importantly, the best practices of software development (e.g. peer reviews, multi-stage deployments, rollbacks) can now be easily applied to websites.
Besides the blog and documentation sections, our website needed custom sections with own templates.</description>
    </item>
    
    <item>
      <title>Quiply Employee Communications App</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/quiply-employee-communications-app/</link>
      <pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/quiply-employee-communications-app/</guid>
      <description>With the launch of our Employee Communications app Quiply we created a very simple and static one-page website to showcase our product.
As our customer base and demand for marketing and communication started to grow, we needed a solution to easily grow and extend the contents of our web presence. As we do not have the need to serve dynamic content, we decided to use a static site generator. Amongst a couple of others, we tried Hugo and it became immediately clear that we&amp;rsquo;d use Hugo going forward as it compiles super-fast, is intuitive to use and offers all the features we need.</description>
    </item>
    
    <item>
      <title>Linode Docs</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/linode/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/linode/</guid>
      <description>The documentation team at Linode has been writing guides since 2009, with the goal of helping new and experienced Linux users find the best tools and get the most out of their systems.
As our library grew into thousands of guides, we needed a fast static site generator with intuitive templating and the flexibility to extend Markdown without constantly writing HTML and CSS.
Hugo solved a lot of our growing pains with features like shortcodes, customizable URLs, LiveReload, and more.</description>
    </item>
    
    <item>
      <title>Hartwell Insurance</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/hartwell-insurance/</link>
      <pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/hartwell-insurance/</guid>
      <description>We’ve just launched a shiny new website for Hartwell Insurance – I’m really proud of it. It was tackled in a different way to most previous Tomango site builds, using some fancy new tools and some vintage web standards.
It’s a multi-page, single-page (!) website written in Hugo, a static site generator built with performance as a first-class feature. I’ve outlined a load of benefits to Hugo &amp;amp; static sites here, in case you’re interested.</description>
    </item>
    
    <item>
      <title>Pace Revenue Management</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/pace-revenue-management/</link>
      <pubDate>Thu, 08 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/pace-revenue-management/</guid>
      <description>From the beginning, at Pace, we were focused on solving customer needs and didn&amp;rsquo;t want to over-engineer our marketing or sales. At the same time we didn&amp;rsquo;t want to lock ourselves into a Wordpress, Squarespace or the like.
The ideal was a fast, simple, static site builder. When we came across Hugo we were blown away. Being a European company we wanted to be multi-lingual from the get-go and allow multiple team-members to collaborate and own their content.</description>
    </item>
    
    <item>
      <title>Hugo Showcase Template</title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/template/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/template/</guid>
      <description>Have a notable Hugo site1? We would love to feature it in this Showcase Section
We would really appreciate if you could:
 Fork https://github.com/gohugoio/hugoDocs Create a copy of the content/showcase/template directory with a suitable name. If you now run hugo server, your site should show up in http://localhost:1313/showcase/ and on the front page. Adjust the files and write a story about your site Create a new pull request in https://github.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://levid-gc.github.io/hugoDocs/showcase/letsencrypt/bio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://levid-gc.github.io/hugoDocs/showcase/letsencrypt/bio/</guid>
      <description>Let&amp;rsquo;s Encrypt is a free, automated, and open certificate authority (CA), run for the public&amp;rsquo;s benefit. It is a service provided by the Internet Security Research Group (ISRG).</description>
    </item>
    
  </channel>
</rss>